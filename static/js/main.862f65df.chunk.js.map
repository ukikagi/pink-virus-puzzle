{"version":3,"sources":["level.ts","point.ts","utils.ts","field.ts","board.tsx","sampleLevel.ts","game.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Tile","Direction","range","n","Array","fill","map","_","i","clone2dArray","xss","xs","parseLevel","data","height","width","console","assert","length","field","y","x","parseInt","createModel","level","value","chara","exit","forEach","CHARA","BLANK","EXIT","BRICK","movePoint","p","d","getTile","setTile","mutableField","tile","isInRange","canGoThrough","BLOCK","includes","isFalling","pointBelow","DOWN","LADDER","ROPE","fieldToTiles","flatMap","point","BLOCK_W","BLOCK_H","Color","JEWEL","Board","props","canvasRef","useRef","useEffect","current","context","getContext","clearRect","filter","color","fillStyle","fillRect","strokeRect","drawBlock","cornerX","cornerY","drawChara","ref","sampleLevels","label","Game","defaultLabel","defaultLevelString","defaultLevel","initialModel","useState","setField","setChara","queue","setQueue","setExit","setBeated","selectValue","setSelectValue","setLevel","levelString","setLevelString","reset","reflect","countJewel","move","dir","UP","newPoint","newChara","newField","dig","target","isBreakable","newQueue","push","shift","tabIndex","onKeyDown","event","key","LEFT","RIGHT","onSubmit","preventDefault","onChange","rows","cols","currentTarget","type","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.862f65df.chunk.js","sourcesContent":["import { Field } from \"./field\";\nimport { Point } from \"./point\";\nimport { clone2dArray, range } from \"./utils\";\n\nexport enum Tile {\n  BLANK = 0,\n  BRICK = 1,\n  BLOCK = 2,\n  LADDER = 3,\n  ROPE = 4,\n  EXIT = 5,\n  JEWEL = 6,\n  CHARA = 7,\n}\n\nexport interface Level {\n  field: Tile[][];\n  width: number;\n  height: number;\n}\n\nexport function parseLevel(data: string, height: number, width: number): Level {\n  console.assert(data.length === width * height);\n  const field = range(height).map((y) =>\n    range(width).map((x) => parseInt(data[y * width + x]))\n  );\n  return { field, width, height };\n}\n\nexport function createModel(level: Level) {\n  const width = level.width;\n  const height = level.height;\n\n  let value: Tile[][] = clone2dArray(level.field);\n  let chara: Point = { x: 0, y: 0 };\n  let exit: Point = { x: 0, y: 0 };\n\n  range(height).forEach((y) => {\n    range(width).forEach((x) => {\n      switch (value[y][x]) {\n        case Tile.CHARA:\n          value[y][x] = Tile.BLANK;\n          chara = { x, y };\n          break;\n        case Tile.EXIT:\n          value[y][x] = Tile.BRICK;\n          exit = { x, y };\n          break;\n      }\n    });\n  });\n\n  const field: Field = { value, width, height };\n  return { field, chara, exit };\n}\n","export interface Point {\n  x: number;\n  y: number;\n}\n\nexport enum Direction {\n  RIGHT = 0,\n  DOWN = 1,\n  LEFT = 2,\n  UP = 3,\n}\n\nexport function movePoint(p: Point, d: Direction): Point {\n  const dx = [1, 0, -1, 0];\n  const dy = [0, 1, 0, -1];\n  return { x: p.x + dx[d], y: p.y + dy[d] };\n}\n","export function range(n: number): number[] {\n  return Array(n)\n    .fill(0)\n    .map((_, i) => i);\n}\n\nexport function clone2dArray<T>(xss: T[][]): T[][] {\n  return xss.map((xs) => [...xs]);\n}\n","import { Tile } from \"./level\";\nimport { Point, Direction, movePoint } from \"./point\";\nimport { range } from \"./utils\";\n\nexport interface Field {\n  value: Tile[][];\n  width: number;\n  height: number;\n}\n\nexport function getTile(field: Field, p: Point): Tile {\n  return field.value[p.y][p.x];\n}\n\nexport function setTile(mutableField: Field, p: Point, tile: Tile): void {\n  mutableField.value[p.y][p.x] = tile;\n}\n\nexport function isInRange(field: Field, p: Point): boolean {\n  return 0 <= p.x && p.x < field.width && 0 <= p.y && p.y < field.height;\n}\n\nexport function canGoThrough(field: Field, p: Point): boolean {\n  return (\n    isInRange(field, p) && ![Tile.BRICK, Tile.BLOCK].includes(getTile(field, p))\n  );\n}\n\nexport function isBreakable(field: Field, p: Point): boolean {\n  return (\n    isInRange(field, p) &&\n    getTile(field, p) === Tile.BRICK &&\n    canGoThrough(field, movePoint(p, Direction.UP))\n  );\n}\n\nexport function isFalling(field: Field, p: Point) {\n  const pointBelow = movePoint(p, Direction.DOWN);\n  return (\n    ![Tile.LADDER, Tile.ROPE, Tile.EXIT].includes(getTile(field, p)) &&\n    canGoThrough(field, pointBelow) &&\n    ![Tile.LADDER].includes(getTile(field, pointBelow))\n  );\n}\n\nexport function fieldToTiles(field: Field) {\n  return range(field.height).flatMap((y) =>\n    range(field.width).map((x) => {\n      const point = { x, y };\n      const tile = getTile(field, point);\n      return { point, tile };\n    })\n  );\n}\n\nexport function countJewel(field: Field) {\n  return fieldToTiles(field).filter(({ tile }) => tile === Tile.JEWEL).length;\n}\n","import React, { useRef, useEffect } from \"react\";\nimport { Tile } from \"./level\";\nimport { Point } from \"./point\";\nimport { Field, fieldToTiles } from \"./field\";\n\nconst BLOCK_W = 40;\nconst BLOCK_H = 40;\n\nconst Color = {\n  [Tile.BLANK]: \"\",\n  [Tile.BRICK]: \"DarkRed\",\n  [Tile.BLOCK]: \"DarkCyan\",\n  [Tile.LADDER]: \"GreenYellow\",\n  [Tile.ROPE]: \"Khaki\",\n  [Tile.EXIT]: \"Red\",\n  [Tile.JEWEL]: \"Cyan\",\n  [Tile.CHARA]: \"\",\n};\n\ninterface BoardProps {\n  field: Field;\n  chara: Point;\n  width: number;\n  height: number;\n}\n\nfunction drawBlock(\n  context: CanvasRenderingContext2D,\n  { x, y }: Point,\n  color: string\n) {\n  context.fillStyle = color;\n  context.fillRect(BLOCK_W * x, BLOCK_H * y, BLOCK_W, BLOCK_H);\n  context.strokeRect(BLOCK_W * x, BLOCK_H * y, BLOCK_W, BLOCK_H);\n}\n\nfunction drawChara(context: CanvasRenderingContext2D, { x, y }: Point) {\n  const cornerX = BLOCK_W * (x + 0.2);\n  const cornerY = BLOCK_H * (y + 0.2);\n  const width = BLOCK_W * 0.6;\n  const height = BLOCK_H * 0.6;\n\n  context.fillStyle = \"pink\";\n  context.fillRect(cornerX, cornerY, width, height);\n  context.strokeRect(cornerX, cornerY, width, height);\n}\n\nexport default function Board(props: BoardProps) {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  useEffect(() => {\n    if (!canvasRef.current) {\n      return;\n    }\n    const context = canvasRef.current.getContext(\"2d\")!;\n    context.clearRect(0, 0, props.width, props.height);\n\n    fieldToTiles(props.field)\n      .filter(({ tile }) => tile !== Tile.BLANK)\n      .forEach(({ point, tile }) => {\n        drawBlock(context, point, Color[tile]);\n      });\n    drawChara(context, props.chara);\n  }, [props]);\n  return <canvas ref={canvasRef} width={props.width} height={props.height} />;\n}\n","export const sampleLevels = [\n  {\n    label: \"sample\",\n    data:\n      \"000000000000\" +\n      \"000007000000\" +\n      \"000003500000\" +\n      \"000003100000\" +\n      \"000003100000\" +\n      \"000003100000\" +\n      \"000003130000\" +\n      \"000000130000\" +\n      \"000003130000\" +\n      \"000003100000\" +\n      \"000003130000\" +\n      \"000006130000\",\n  },\n  {\n    label: \"classic-beginner1\",\n    data:\n      \"044444400000006000030000000000030700011110031111010610030000011210034000000000000300004000000300000600000300000100000310001110000310051111000316\",\n  },\n  {\n    label: \"classic-beginner2\",\n    data:\n      \"000000000000000000000007111112111111111116111111111111111111000000600000000000000000111113122222111113111111006003144444444443100006000000000005\",\n  },\n  {\n    label: \"classic-beginner3\",\n    data:\n      \"064444000070030003003030034403043030000003003000000603403000000006003000000003003400004403406000000003003000000003003400000043043000500000000000\",\n  },\n  {\n    label: \"classic-beginner4\",\n    data:\n      \"000000000000444400000000300000070000300212121212300060000060340000000000003111111111003111111111003111161111003000100001613000000001503003100001\",\n  },\n  {\n    label: \"classic-intermediate1\",\n    data:\n      \"000000000000000000700000000061111111311111111111321221211116304440611113110001111113010001110003001011112222000100161111000100044445000100000001\",\n  },\n  {\n    label: \"classic-intermediate2\",\n    data:\n      \"000007000000101111111035131060111031131111122031131211000031131163132031131111131031131131136031131111161031136113111031111161301031000000110030\",\n  },\n  {\n    label: \"classic-intermediate3\",\n    data:\n      \"000007000000000022200000000000000000000000000000004444404030613000016230013000002030013000000030013000000030613002613030122222222222000000000005\",\n  },\n  {\n    label: \"classic-advanced1\",\n    data:\n      \"000000000700000002311111311131131111311131111111311131111111311131000611311601132212311000032200351220100202300001613262311111203202300000003000\",\n  },\n  {\n    label: \"classic-advanced2\",\n    data:\n      \"000000000000000444420000073232620000212230000000060032121300220500000230001300000030444060606030600000000030000022222030000000000316222222222222\",\n  },\n  {\n    label: \"classic-advanced3\",\n    data:\n      \"000000000000031111153000031110710300031111110300030060600300030000000300030606060300030000000300030000000300030000000300031220222213061000000013\",\n  },\n  {\n    label: \"classic-german1\",\n    data:\n      \"040440007000101001111231101111111231161161100031101111060231101111111231101111111231101111111231101116111231000000000030101111111131111111100035\",\n  },\n  {\n    label: \"classic-german2\",\n    data:\n      \"000000000000444374430000600321030000444316100310000011000316444444311110600000311110012222211111100000000005110000000311111000003111222222222222\",\n  },\n  {\n    label: \"classic-german3\",\n    data:\n      \"000000004440000000003000000000003000000000003000304040403000310101010060301616100000344404047000300010101000300000000000300000400000300000016105\",\n  },\n  {\n    label: \"classic-german4\",\n    data:\n      \"000000000000000000000000000000000000000000007000322222202222300000000005301111111111301111111111301212121212300000000000300262626262310000000000\",\n  },\n];\n","import React, { useState } from \"react\";\nimport Board from \"./board\";\nimport {\n  canGoThrough,\n  countJewel,\n  Field,\n  getTile,\n  isBreakable,\n  isFalling,\n  setTile,\n} from \"./field\";\nimport { createModel, Level, parseLevel, Tile } from \"./level\";\nimport { Direction, movePoint, Point } from \"./point\";\nimport { sampleLevels } from \"./sampleLevel\";\nimport { clone2dArray } from \"./utils\";\n\nconst MAXQ = 5;\n\ninterface GameProp {\n  width: number;\n  height: number;\n}\n\nexport default function Game(props: GameProp) {\n  const defaultLabel = sampleLevels[0].label;\n  const defaultLevelString = sampleLevels[0].data;\n  const defaultLevel = parseLevel(defaultLevelString, 12, 12);\n\n  const initialModel = createModel(defaultLevel);\n\n  const [field, setField] = useState<Field>(initialModel.field);\n  const [chara, setChara] = useState<Point>(initialModel.chara);\n  const [queue, setQueue] = useState<Point[]>([]);\n  const [exit, setExit] = useState<Point>(initialModel.exit);\n  const [beated, setBeated] = useState<boolean>(false);\n\n  const [selectValue, setSelectValue] = useState(defaultLabel);\n  const [level, setLevel] = useState(defaultLevel);\n  const [levelString, setLevelString] = useState(defaultLevelString);\n\n  function onLevelStringChange(event: React.ChangeEvent<HTMLTextAreaElement>) {\n    setLevelString(event.target.value);\n  }\n\n  function onSelectChange(event: React.ChangeEvent<HTMLSelectElement>) {\n    const levelString = event.currentTarget.value;\n    const level = parseLevel(levelString, 12, 12);\n    setLevelString(event.currentTarget.value);\n    setSelectValue(event.currentTarget.value);\n    reset(level);\n  }\n\n  function onSubmit(event: React.FormEvent<HTMLFormElement>) {\n    const level = parseLevel(levelString, 12, 12);\n    reset(level);\n    event.preventDefault();\n  }\n\n  function onKeyDown(event: React.KeyboardEvent<HTMLDivElement>) {\n    switch (event.key) {\n      case \"ArrowDown\":\n        move(Direction.DOWN);\n        break;\n      case \"ArrowLeft\":\n        move(Direction.LEFT);\n        break;\n      case \"ArrowRight\":\n        move(Direction.RIGHT);\n        break;\n      case \"ArrowUp\":\n        move(Direction.UP);\n        break;\n      case \"z\":\n        dig(Direction.LEFT);\n        break;\n      case \"x\":\n        dig(Direction.RIGHT);\n        break;\n      case \"r\":\n        reset(level);\n        break;\n    }\n  }\n\n  function reset(level: Level): void {\n    setLevel(level);\n    const { field, chara, exit } = createModel(level);\n    setField(field);\n    setChara(chara);\n    setQueue([]);\n    setExit(exit);\n    setBeated(false);\n  }\n\n  function reflect(mutableField: Field, chara: Point, exit: Point): void {\n    if (getTile(mutableField, chara) === Tile.JEWEL) {\n      setTile(mutableField, chara, Tile.BLANK);\n    }\n    if (getTile(mutableField, chara) === Tile.EXIT) {\n      setBeated(true);\n    }\n    if (countJewel(mutableField) === 0) {\n      setTile(mutableField, exit, Tile.EXIT);\n    }\n  }\n\n  function move(dir: Direction): void {\n    if (dir === Direction.UP && getTile(field, chara) !== Tile.LADDER) {\n      return;\n    }\n    const newPoint = movePoint(chara, dir);\n    if (!canGoThrough(field, newPoint)) {\n      return;\n    }\n\n    let newChara = { ...newPoint };\n    let newField = { ...field, value: clone2dArray(field.value) };\n    reflect(newField, newChara, exit);\n    while (isFalling(newField, newChara)) {\n      newChara = movePoint(newChara, Direction.DOWN);\n      reflect(newField, newChara, exit);\n    }\n    setChara(newChara);\n    setField(newField);\n  }\n\n  function dig(dir: Direction.LEFT | Direction.RIGHT): void {\n    const target = movePoint(movePoint(chara, Direction.DOWN), dir);\n    if (!isBreakable(field, target)) {\n      return;\n    }\n    let newField = { ...field, value: clone2dArray(field.value) };\n    let newQueue = [...queue];\n    setTile(newField, target, Tile.BLANK);\n    newQueue.push(target);\n    if (newQueue.length > MAXQ) {\n      const popped = newQueue.shift()!;\n      setTile(newField, popped, Tile.BRICK);\n    }\n    setField(newField);\n    setQueue(newQueue);\n  }\n\n  return (\n    <div tabIndex={0} onKeyDown={onKeyDown}>\n      <Board\n        field={field}\n        chara={chara}\n        width={props.width}\n        height={props.height}\n      />\n      <form onSubmit={onSubmit}>\n        <div>\n          <textarea\n            value={levelString}\n            onChange={onLevelStringChange}\n            rows={5}\n            cols={60}\n          />\n        </div>\n        <select value={selectValue} onChange={onSelectChange}>\n          {sampleLevels.map(({ label, data }) => (\n            <option key={label} value={data}>\n              {label}\n            </option>\n          ))}\n        </select>\n        <input type=\"submit\" value=\"Refresh\" />\n      </form>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Game from \"./game\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game width={480} height={480} />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}