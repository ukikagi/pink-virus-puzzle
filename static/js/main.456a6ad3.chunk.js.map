{"version":3,"sources":["level.ts","utils.ts","point.ts","field.ts","game.ts","Board.tsx","sampleLevel.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Tile","range","n","Array","fill","map","_","i","Direction","parseLevel","data","height","width","console","assert","length","field","y","x","parseInt","movePoint","p","d","getTile","value","setTile","mutableField","tile","isInRange","canGoThrough","BRICK","BLOCK","includes","isFalling","pointBelow","DOWN","LADDER","ROPE","EXIT","fieldToTiles","flatMap","point","cloneModel","gameState","JSON","parse","stringify","reflect","mutModel","mutField","chara","exit","JEWEL","BLANK","beated","filter","createModel","level","xs","forEach","CHARA","queue","move","oldModel","dir","UP","newChara","newModel","dig","target","push","popped","shift","BLOCK_W","BLOCK_H","Color","Board","props","canvasRef","useRef","useEffect","canvas","current","focus","context","getContext","clearRect","color","fillStyle","fillRect","strokeRect","drawBlock","cornerX","cornerY","drawChara","ref","tabIndex","onKeyDown","sampleLevels","label","defaultLevelString","App","useState","selectValue","setSelectValue","levelString","setLevelString","gameModel","setGameModel","loadLevel","model","Box","className","event","key","LEFT","RIGHT","TextField","rows","onChange","multiline","variant","style","Select","newLevelString","MenuItem","Button","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.456a6ad3.chunk.js","sourcesContent":["import { range } from \"./utils\";\n\nexport enum Tile {\n  BLANK = 0,\n  BRICK = 1,\n  BLOCK = 2,\n  LADDER = 3,\n  ROPE = 4,\n  EXIT = 5,\n  JEWEL = 6,\n  CHARA = 7,\n}\n\nexport interface Level {\n  field: Tile[][];\n  width: number;\n  height: number;\n}\n\nconst FIXED_HEIGHT = 12;\nconst FIXED_WIDTH = 12;\n\nexport function parseLevel(\n  data: string,\n  height: number = FIXED_HEIGHT,\n  width: number = FIXED_WIDTH\n): Level {\n  console.assert(data.length === width * height);\n  const field = range(height).map((y) =>\n    range(width).map((x) => parseInt(data[y * width + x]))\n  );\n  return { field, width, height };\n}\n","export function range(n: number): number[] {\n  return Array(n)\n    .fill(0)\n    .map((_, i) => i);\n}\n\nexport function clone2dArray<T>(xss: T[][]): T[][] {\n  return xss.map((xs) => [...xs]);\n}\n","export interface Point {\n  x: number;\n  y: number;\n}\n\nexport enum Direction {\n  RIGHT = 0,\n  DOWN = 1,\n  LEFT = 2,\n  UP = 3,\n}\n\nexport function movePoint(p: Point, d: Direction): Point {\n  const dx = [1, 0, -1, 0];\n  const dy = [0, 1, 0, -1];\n  return { x: p.x + dx[d], y: p.y + dy[d] };\n}\n","import { Tile } from \"./level\";\nimport { Point, Direction, movePoint } from \"./point\";\nimport { range } from \"./utils\";\n\nexport interface Field {\n  value: Tile[][];\n  width: number;\n  height: number;\n}\n\nexport function getTile(field: Field, p: Point): Tile {\n  return field.value[p.y][p.x];\n}\n\nexport function setTile(mutableField: Field, p: Point, tile: Tile): void {\n  mutableField.value[p.y][p.x] = tile;\n}\n\nexport function isInRange(field: Field, p: Point): boolean {\n  return 0 <= p.x && p.x < field.width && 0 <= p.y && p.y < field.height;\n}\n\nexport function canGoThrough(field: Field, p: Point): boolean {\n  return (\n    isInRange(field, p) && ![Tile.BRICK, Tile.BLOCK].includes(getTile(field, p))\n  );\n}\n\nexport function isBreakable(field: Field, p: Point): boolean {\n  return (\n    isInRange(field, p) &&\n    getTile(field, p) === Tile.BRICK &&\n    canGoThrough(field, movePoint(p, Direction.UP))\n  );\n}\n\nexport function isFalling(field: Field, p: Point) {\n  const pointBelow = movePoint(p, Direction.DOWN);\n  return (\n    ![Tile.LADDER, Tile.ROPE, Tile.EXIT].includes(getTile(field, p)) &&\n    canGoThrough(field, pointBelow) &&\n    ![Tile.LADDER].includes(getTile(field, pointBelow))\n  );\n}\n\nexport function fieldToTiles(field: Field) {\n  return range(field.height).flatMap((y) =>\n    range(field.width).map((x) => {\n      const point = { x, y };\n      const tile = getTile(field, point);\n      return { point, tile };\n    })\n  );\n}\n\nexport function countJewel(field: Field) {\n  return fieldToTiles(field).filter(({ tile }) => tile === Tile.JEWEL).length;\n}\n","import {\n  canGoThrough,\n  countJewel,\n  Field,\n  getTile,\n  isBreakable,\n  isFalling,\n  setTile,\n} from \"./field\";\nimport { Level, Tile } from \"./level\";\nimport { Direction, movePoint, Point } from \"./point\";\nimport { clone2dArray, range } from \"./utils\";\n\nconst MAXQ = 5;\n\nexport interface GameModel {\n  level: Level;\n  field: Field;\n  chara: Point;\n  exit: Point;\n  queue: Point[];\n  beated: boolean;\n}\n\nfunction cloneModel(gameState: GameModel): GameModel {\n  return JSON.parse(JSON.stringify(gameState));\n}\n\nfunction reflect(mutModel: GameModel): void {\n  const { field: mutField, chara, exit } = mutModel;\n  if (getTile(mutField, chara) === Tile.JEWEL) {\n    setTile(mutField, chara, Tile.BLANK);\n  }\n  if (getTile(mutField, chara) === Tile.EXIT) {\n    mutModel.beated = true;\n  }\n  if (countJewel(mutField) === 0) {\n    setTile(mutField, exit, Tile.EXIT);\n  }\n}\n\nexport function createModel(level: Level): GameModel {\n  const width = level.width;\n  const height = level.height;\n\n  let value: Tile[][] = clone2dArray(level.field);\n  let chara: Point = { x: 0, y: 0 };\n  let exit: Point = { x: 0, y: 0 };\n\n  range(height).forEach((y) => {\n    range(width).forEach((x) => {\n      switch (value[y][x]) {\n        case Tile.CHARA:\n          value[y][x] = Tile.BLANK;\n          chara = { x, y };\n          break;\n        case Tile.EXIT:\n          value[y][x] = Tile.BRICK;\n          exit = { x, y };\n          break;\n      }\n    });\n  });\n\n  const field = { value, width, height };\n  return { level, field, chara, exit, queue: [], beated: false };\n}\n\nexport function reset(oldModel: GameModel): GameModel {\n  return createModel(oldModel.level);\n}\n\nexport function move(oldModel: GameModel, dir: Direction): GameModel {\n  if (\n    dir === Direction.UP &&\n    getTile(oldModel.field, oldModel.chara) !== Tile.LADDER\n  ) {\n    return oldModel;\n  }\n  const newChara = movePoint(oldModel.chara, dir);\n  if (!canGoThrough(oldModel.field, newChara)) {\n    return oldModel;\n  }\n\n  let newModel = cloneModel(oldModel);\n  newModel.chara = newChara;\n  reflect(newModel);\n  while (isFalling(newModel.field, newModel.chara)) {\n    newModel.chara = movePoint(newModel.chara, Direction.DOWN);\n    reflect(newModel);\n  }\n\n  return newModel;\n}\n\nexport function dig(\n  oldModel: GameModel,\n  dir: Direction.LEFT | Direction.RIGHT\n): GameModel {\n  const target = movePoint(movePoint(oldModel.chara, Direction.DOWN), dir);\n  if (!isBreakable(oldModel.field, target)) {\n    return oldModel;\n  }\n\n  let newModel = cloneModel(oldModel);\n  setTile(newModel.field, target, Tile.BLANK);\n  newModel.queue.push(target);\n  if (newModel.queue.length > MAXQ) {\n    const popped = newModel.queue.shift()!;\n    setTile(newModel.field, popped, Tile.BRICK);\n  }\n\n  return newModel;\n}\n","import React, { useRef, useEffect } from \"react\";\nimport { Tile } from \"./level\";\nimport { Point } from \"./point\";\nimport { Field, fieldToTiles } from \"./field\";\n\nconst BLOCK_W = 40;\nconst BLOCK_H = 40;\n\nconst Color = {\n  [Tile.BLANK]: \"\",\n  [Tile.BRICK]: \"DarkRed\",\n  [Tile.BLOCK]: \"DarkCyan\",\n  [Tile.LADDER]: \"GreenYellow\",\n  [Tile.ROPE]: \"Khaki\",\n  [Tile.EXIT]: \"Red\",\n  [Tile.JEWEL]: \"Cyan\",\n  [Tile.CHARA]: \"\",\n};\n\ninterface BoardProps {\n  field: Field;\n  chara: Point;\n  width: number;\n  height: number;\n  tabIndex: number;\n  onKeyDown: (event: React.KeyboardEvent<HTMLCanvasElement>) => void;\n}\n\nfunction drawBlock(\n  context: CanvasRenderingContext2D,\n  { x, y }: Point,\n  color: string\n) {\n  context.fillStyle = color;\n  context.fillRect(BLOCK_W * x, BLOCK_H * y, BLOCK_W, BLOCK_H);\n  context.strokeRect(BLOCK_W * x, BLOCK_H * y, BLOCK_W, BLOCK_H);\n}\n\nfunction drawChara(context: CanvasRenderingContext2D, { x, y }: Point) {\n  const cornerX = BLOCK_W * (x + 0.2);\n  const cornerY = BLOCK_H * (y + 0.2);\n  const width = BLOCK_W * 0.6;\n  const height = BLOCK_H * 0.6;\n\n  context.fillStyle = \"pink\";\n  context.fillRect(cornerX, cornerY, width, height);\n  context.strokeRect(cornerX, cornerY, width, height);\n}\n\nexport default function Board(props: BoardProps) {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) {\n      return;\n    }\n    canvas.focus();\n    const context = canvas.getContext(\"2d\")!;\n    context.clearRect(0, 0, props.width, props.height);\n\n    fieldToTiles(props.field)\n      .filter(({ tile }) => tile !== Tile.BLANK)\n      .forEach(({ point, tile }) => {\n        drawBlock(context, point, Color[tile]);\n      });\n    drawChara(context, props.chara);\n  }, [props]);\n  return (\n    <canvas\n      ref={canvasRef}\n      width={props.width}\n      height={props.height}\n      tabIndex={props.tabIndex}\n      onKeyDown={props.onKeyDown}\n    />\n  );\n}\n","export const sampleLevels = [\n  {\n    label: \"sample\",\n    data:\n      \"000000000000\" +\n      \"000007000000\" +\n      \"000003500000\" +\n      \"000003100000\" +\n      \"000003100000\" +\n      \"000003100000\" +\n      \"000003130000\" +\n      \"000000130000\" +\n      \"000003130000\" +\n      \"000003100000\" +\n      \"000003130000\" +\n      \"000006130000\",\n  },\n  {\n    label: \"classic-beginner1\",\n    data:\n      \"044444400000006000030000000000030700011110031111010610030000011210034000000000000300004000000300000600000300000100000310001110000310051111000316\",\n  },\n  {\n    label: \"classic-beginner2\",\n    data:\n      \"000000000000000000000007111112111111111116111111111111111111000000600000000000000000111113122222111113111111006003144444444443100006000000000005\",\n  },\n  {\n    label: \"classic-beginner3\",\n    data:\n      \"064444000070030003003030034403043030000003003000000603403000000006003000000003003400004403406000000003003000000003003400000043043000500000000000\",\n  },\n  {\n    label: \"classic-beginner4\",\n    data:\n      \"000000000000444400000000300000070000300212121212300060000060340000000000003111111111003111111111003111161111003000100001613000000001503003100001\",\n  },\n  {\n    label: \"classic-intermediate1\",\n    data:\n      \"000000000000000000700000000061111111311111111111321221211116304440611113110001111113010001110003001011112222000100161111000100044445000100000001\",\n  },\n  {\n    label: \"classic-intermediate2\",\n    data:\n      \"000007000000101111111035131060111031131111122031131211000031131163132031131111131031131131136031131111161031136113111031111161301031000000110030\",\n  },\n  {\n    label: \"classic-intermediate3\",\n    data:\n      \"000007000000000022200000000000000000000000000000004444404030613000016230013000002030013000000030013000000030613002613030122222222222000000000005\",\n  },\n  {\n    label: \"classic-advanced1\",\n    data:\n      \"000000000700000002311111311131131111311131111111311131111111311131000611311601132212311000032200351220100202300001613262311111203202300000003000\",\n  },\n  {\n    label: \"classic-advanced2\",\n    data:\n      \"000000000000000444420000073232620000212230000000060032121300220500000230001300000030444060606030600000000030000022222030000000000316222222222222\",\n  },\n  {\n    label: \"classic-advanced3\",\n    data:\n      \"000000000000031111153000031110710300031111110300030060600300030000000300030606060300030000000300030000000300030000000300031220222213061000000013\",\n  },\n  {\n    label: \"classic-german1\",\n    data:\n      \"040440007000101001111231101111111231161161100031101111060231101111111231101111111231101111111231101116111231000000000030101111111131111111100035\",\n  },\n  {\n    label: \"classic-german2\",\n    data:\n      \"000000000000444374430000600321030000444316100310000011000316444444311110600000311110012222211111100000000005110000000311111000003111222222222222\",\n  },\n  {\n    label: \"classic-german3\",\n    data:\n      \"000000004440000000003000000000003000000000003000304040403000310101010060301616100000344404047000300010101000300000000000300000400000300000016105\",\n  },\n  {\n    label: \"classic-german4\",\n    data:\n      \"000000000000000000000000000000000000000000007000322222202222300000000005301111111111301111111111301212121212300000000000300262626262310000000000\",\n  },\n];\n","import React, { useState } from \"react\";\nimport { createModel, dig, GameModel, move, reset } from \"./game\";\nimport \"./App.css\";\nimport Board from \"./Board\";\nimport { parseLevel } from \"./level\";\nimport { Direction } from \"./point\";\nimport { sampleLevels } from \"./sampleLevel\";\nimport { Box, Button, MenuItem, Select, TextField } from \"@material-ui/core\";\n\nconst defaultLevelString = sampleLevels[0].data;\n\nfunction App() {\n  const [selectValue, setSelectValue] = useState(defaultLevelString);\n  const [levelString, setLevelString] = useState(defaultLevelString);\n  const [gameModel, setGameModel] = useState<GameModel>(\n    createModel(parseLevel(defaultLevelString))\n  );\n\n  function loadLevel(levelString: string) {\n    const level = parseLevel(levelString);\n    const model = createModel(level);\n    setGameModel(model);\n  }\n\n  function onLevelStringChange(event: React.ChangeEvent<{ value: string }>) {\n    setLevelString(event.target.value);\n  }\n\n  function onSelectChange(event: React.ChangeEvent<{ value: unknown }>) {\n    const newLevelString = event.target.value as string;\n    setLevelString(newLevelString);\n    setSelectValue(newLevelString);\n    loadLevel(newLevelString);\n  }\n\n  function onClick() {\n    loadLevel(levelString);\n  }\n\n  function onKeyDown<T>(event: React.KeyboardEvent<T>) {\n    switch (event.key) {\n      case \"ArrowDown\":\n        setGameModel(move(gameModel, Direction.DOWN));\n        break;\n      case \"ArrowLeft\":\n        setGameModel(move(gameModel, Direction.LEFT));\n        break;\n      case \"ArrowRight\":\n        setGameModel(move(gameModel, Direction.RIGHT));\n        break;\n      case \"ArrowUp\":\n        setGameModel(move(gameModel, Direction.UP));\n        break;\n      case \"z\":\n        setGameModel(dig(gameModel, Direction.LEFT));\n        break;\n      case \"x\":\n        setGameModel(dig(gameModel, Direction.RIGHT));\n        break;\n      case \"r\":\n        setGameModel(reset(gameModel));\n        break;\n    }\n  }\n\n  return (\n    <Box className=\"App\">\n      <Board\n        tabIndex={0}\n        onKeyDown={onKeyDown}\n        field={gameModel.field}\n        chara={gameModel.chara}\n        width={480}\n        height={480}\n      />\n      <TextField\n        value={levelString}\n        rows={3}\n        onChange={onLevelStringChange}\n        multiline\n        variant=\"outlined\"\n        style={{ width: 480 }}\n      />\n      <Box>\n        <Select\n          variant=\"outlined\"\n          value={selectValue}\n          onChange={onSelectChange}\n          style={{ width: 320 }}\n        >\n          {sampleLevels.map(({ label, data }) => (\n            <MenuItem key={label} value={data}>\n              {label}\n            </MenuItem>\n          ))}\n        </Select>\n      </Box>\n      <Box>\n        <Button onClick={onClick} variant=\"contained\">\n          Refresh\n        </Button>\n      </Box>\n    </Box>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}